services:
  postgres:
    image: postgres:17-alpine
    container_name: taskflow-postgres
    environment:
      POSTGRES_DB: taskflow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: node:22-alpine
    container_name: taskflow-migrate
    working_dir: /app
    command: sh -c "npm i prisma@6.16.2 && npx prisma migrate deploy"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/taskflow
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/prisma:/app/prisma
      - /app/node_modules

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskflow-backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/taskflow # This will be resolved inside the container
      JWT_SECRET: c454c574681632cca4dd2365b5f8724e1cd80660ee9cccca211d1035ab05cbcd632b9c84fc09c36ec81e1b455d0f6773
      JWT_EXPIRES_IN: 60m
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskflow-frontend
    ports:
      - "127.0.0.1:80:80"
    depends_on:
      - backend
    environment:
      VUE_APP_API_URL: http://localhost:3000

volumes:
  postgres_data:
